(this.webpackJsonppathfindingvisualizer=this.webpackJsonppathfindingvisualizer||[]).push([[0],[,,,,,,,,,,,,,,,,function(t,e,n){},function(t,e,n){},,function(t,e,n){},,function(t,e,n){},,function(t,e,n){},function(t,e,n){},function(t,e,n){},function(t,e,n){"use strict";n.r(e);var i,a=n(2),o=n(11),r=n.n(o),s=(n(16),n(17),n(1)),l=n(4),c=n.n(l),u=n(10),d=n(5),h=n(6),p=n(8),f=n(7),g=(n(19),n(0)),m=function(t){Object(p.a)(n,t);var e=Object(f.a)(n);function n(){return Object(d.a)(this,n),e.apply(this,arguments)}return Object(h.a)(n,[{key:"render",value:function(){var t=this.props,e=t.col,n=t.row,i=t.isFinish,a=t.isStart,o=t.isWall,r=t.onMouseDown,s=t.onMouseEnter,l=t.onMouseUp,c="";return i?c="node-finish":a?c="node-start":o&&(c="node-wall"),Object(g.jsx)("div",{className:"node ".concat(c),id:"node-".concat(n,"-").concat(e),onMouseDown:function(){return r(n,e)},onMouseEnter:function(){return s(n,e)},onMouseUp:function(){return l()}})}}]),n}(a.Component),y=(n(21),n(3)),b=n.n(y);function v(t,e,n){if(!e||!n||e===n)return!1;i=new b.a((function(t,e){return t.distance-e.distance}));var a=[];for(e.distance=0,function(t){var e,n=Object(s.a)(t);try{for(n.s();!(e=n.n()).done;){var a,o=e.value,r=Object(s.a)(o);try{for(r.s();!(a=r.n()).done;){var l=a.value;i.push(l)}}catch(c){r.e(c)}finally{r.f()}}}catch(c){n.e(c)}finally{n.f()}}(t),i.heapify();0!==i.length;){var o=i.pop();if(!o.isWall){if(o.distance===1/0)return a;if(o.visited=!0,a.push(o),o===n)return a;x(o,t)}}}function x(t,e){var n,a=j(t,e),o=Object(s.a)(a);try{for(o.s();!(n=o.n()).done;){var r=n.value;r.distance>t.distance+1&&(r.distance=t.distance+1,r.previousNode=t,i.updateItem(r))}}catch(l){o.e(l)}finally{o.f()}}function w(t,e){var n=[],i=t.col,a=t.row;return a>0&&n.push(e[a-1][i]),a<e.length-1&&n.push(e[a+1][i]),i>0&&n.push(e[a][i-1]),i<e[0].length-1&&n.push(e[a][i+1]),n}function j(t,e){return w(t,e).filter((function(t){return!t.visited}))}function O(t){for(var e=[],n=t;null!==n;)e.unshift(n),n=n.previousNode;return e}function N(t,e){if(!function(t,e){if(t===[])return!1;var n,i=Object(s.a)(t);try{for(i.s();!(n=i.n()).done;){var a=n.value;if(a.row===e.row&&a.col===e.col)return!0}}catch(o){i.e(o)}finally{i.f()}return!1}(e,t))return[];for(var n=[],i=t;null!==i;)n.unshift(i),i=i.previousNode;return n}function k(t,e,n){if(!e||!n||e===n)return!1;var i=[],a=new C;for(e.distance=0,a.enqueue(e);0!==a.length;){var o=a.dequeue();if("undefined"===typeof o)return i;if(!o.isWall){if(o.distance=0,o.visited=!0,i.push(o),o===n)return i;var r,l=j(o,t),c=Object(s.a)(l);try{for(c.s();!(r=c.n()).done;){var u=r.value;u.isWall||(a.enqueue(u),u.visited=!0,u.previousNode=o,u.distance=0)}}catch(d){c.e(d)}finally{c.f()}}}}function C(){var t=[],e=0;this.getLength=function(){return t.length-e},this.isEmpty=function(){return 0===t.length},this.enqueue=function(e){t.push(e)},this.dequeue=function(){if(0!==t.length){var n=t[e];return 2*++e>=t.length&&(t=t.slice(e),e=0),n}},this.peek=function(){return t.length>0?t[e]:void 0}}var I=[],M=0;function W(t,e,n){return I=[],B(t,e,n)}function B(t,e,n){if(!e||!n||e===n)return!1;if(!e.isWall&&!e.visited){if(e.visited=!0,I.push(e),e===n)return M=1,I;var i,a=j(e,t),o=Object(s.a)(a);try{for(o.s();!(i=o.n()).done;){var r=i.value;if(!r.isWall&&!r.visited){if(r.previousNode=e,1===M)return I;if(B(t,r,n),1===M)return I}}}catch(l){o.e(l)}finally{o.f()}return I}}var E,S,A,F,T=0,H=[],L=0;function z(t){var e,n=Object(s.a)(t);try{for(n.s();!(e=n.n()).done;){e.value.visited=!1}}catch(i){n.e(i)}finally{n.f()}return t}function D(t,e,n,i){if(!e||!n||e===n)return!1;if(e===n)return L=1,!0;if(i<=0)return!1;if(e.isWall)return!1;e.visited=!0,H.includes(e)||H.push(e);var a,o=j(e,t),r=Object(s.a)(o);try{for(r.s();!(a=r.n()).done;){var l=a.value;if(!l.isWall&&!l.visited){if(l.previousNode=e,1===L)return!0;if(D(t,l,n,i-1))return!0;if(1===L)return!0}}}catch(c){r.e(c)}finally{r.f()}return!1}function R(t,e,n){if(!e||!n||e===n)return!1;var i=[];for(E=new b.a((function(t,e){return t.fCost-e.fCost})),function(t){var e,n=Object(s.a)(t);try{for(n.s();!(e=n.n()).done;){var i,a=e.value,o=Object(s.a)(a);try{for(o.s();!(i=o.n()).done;){var r=i.value;r.fCost=1/0,r.gCost=1/0,r.hCost=1/0,E.push(r)}}catch(l){o.e(l)}finally{o.f()}}}catch(l){n.e(l)}finally{n.f()}}(t),e.fCost=0,e.gCost=0,e.hCost=0,E.heapify();0!==E.length;){var a=E.pop();if("undefined"===typeof a)return i;if(!a.isWall){if(a.fCost===1/0)return i;if(a.visited=!0,console.log(a),i.push(a),a===n)return i;var o,r=j(a,t),l=Object(s.a)(r);try{for(l.s();!(o=l.n()).done;){var c=o.value;if(!c.isWall){var u=G(c.col,n.col,c.row,n.row);a.gCost+1<c.gCost&&(c.hCost=u,c.gCost=a.gCost+1,c.fCost=c.hCost+c.gCost,c.previousNode=a,E.updateItem(c))}}}catch(d){l.e(d)}finally{l.f()}}}return console.log(t),i}function P(t,e,n,i){var a=Math.abs(t-e),o=Math.abs(n-i),r=Math.pow(a,2),s=Math.pow(o,2);return Math.pow(r+s,.5)}function G(t,e,n,i){return Math.abs(t-e)+Math.abs(n-i)}function _(t){var e,n=Object(s.a)(t);try{for(n.s();!(e=n.n()).done;){var i=e.value;if(i.visitedByStart&&i.visitedByFinish&&!i.isWall)return S=i.row,A=i.col,!0}}catch(a){n.e(a)}finally{n.f()}return!1}function q(t,e){return w(t,e).filter((function(t){return t.visitedByFinish||!t.visited}))}function V(t,e){return w(t,e).filter((function(t){return t.visitedByStart||!t.visited}))}function U(){var t=[],e=0;this.getLength=function(){return t.length-e},this.isEmpty=function(){return 0===t.length},this.enqueue=function(e){t.push(e)},this.dequeue=function(){if(0!==t.length){var n=t[e];return 2*++e>=t.length&&(t=t.slice(e),e=0),n}},this.peek=function(){return t.length>0?t[e]:void 0}}function Z(t,e,n){if(!e||!n||e===n)return!1;var i=[];for(F=new b.a((function(t,e){return t.fCost-e.fCost})),function(t){var e,n=Object(s.a)(t);try{for(n.s();!(e=n.n()).done;){var i,a=e.value,o=Object(s.a)(a);try{for(o.s();!(i=o.n()).done;){var r=i.value;r.fCost=1/0,r.hCost=1/0,F.push(r)}}catch(l){o.e(l)}finally{o.f()}}}catch(l){n.e(l)}finally{n.f()}}(t),e.fCost=0,F.updateItem(e),F.heapify();F.size()>0;){var a=F.pop();if("undefined"===typeof a)return i;if(a.fCost===1/0)return i;if(!a.isWall){if(a.visited=!0,i.push(a),a===n)return i;var o,r=j(a,t),l=Object(s.a)(r);try{for(l.s();!(o=l.n()).done;){var c=o.value;if(!c.isWall){var u=P(c.col,n.col,c.row,n.row);c.fCost>u&&(c.fCost=u,c.previousNode=a,F.updateItem(c))}}}catch(d){l.e(d)}finally{l.f()}}}return i}function K(t,e){return Math.floor(Math.random()*(e-t+1))+t}var J=[],X="";function Y(t,e,n,i,a,o,r){return J=[],X=r,$(t,e,n,i,a,o),J}function $(t,e,n,i,a,o){if(!(n<e||a<i))if("HORIZONTAL"===o){for(var r=[],l=e;l<=n;l+=2)r.push(l);for(var c=[],u=i-1;u<=a+1;u+=2)c.push(u);var d,h=Math.floor(Math.random()*r.length),p=Math.floor(Math.random()*c.length),f=r[h],g=c[p],m=t[f],y=Object(s.a)(m);try{for(y.s();!(d=y.n()).done;){var b=d.value;b.row===f&&!b.isStart&&!b.isFinish&&b.col!==g&&!b.visited&&b.col>=i-1&&b.col<=a+1&&(b.isWall=!0,b.visited=!0,J.push(b))}}catch(W){y.e(W)}finally{y.f()}$(t,e,f-2,i,a,f-2-e>a-i?Q(o,o,"VERTICAL"):Q("VERTICAL","VERTICAL","VERTICAL")),$(t,f+2,n,i,a,n-(f+2)>a-i?Q(o,o,"VERTICAL"):Q("VERTICAL","VERTICAL","VERTICAL"))}else{for(var v=[],x=i;x<=a;x+=2)v.push(x);for(var w=[],j=e-1;j<=n+1;j+=2)w.push(j);for(var O=Math.floor(Math.random()*v.length),N=Math.floor(Math.random()*w.length),k=v[O],C=w[N],I=e-1;I<=n+1;I++){var M=t[I][k];!M.isStart&&!M.isFinish&&M.col===k&&!M.visited&&M.row>=e-1&&M.row<=n+1&&M.row!==C&&(M.visited=!0,M.isWall=!0,J.push(M))}$(t,e,n,i,k-2,Q(n-e>k-2-i?"HORIZONTAL":o,"HORIZONTAL",o)),$(t,e,n,k+2,a,n-e>a-(k+2)?Q("HORIZONTAL","HORIZONTAL","HORIZONTAL"):Q(o,"HORIZONTAL",o))}}function Q(t,e,n){return"regularMaze"===X?t:"horizontalMaze"===X?e:"verticalMaze"===X?n:void 0}n(23),n(24);n(25);var tt=ht(),et=tt.NUM_COLUMNS,nt=tt.NUM_ROWS,it=tt.FINISH_NODE_ROW,at=tt.FINISH_NODE_COL,ot=4,rt=2,st=!1,lt=!1,ct=!1,ut=!1,dt=0;function ht(){var t=Math.floor((window.innerWidth-50)/35),e=Math.floor(window.innerHeight/52);return{NUM_COLUMNS:t,NUM_ROWS:e,FINISH_NODE_COL:t-5,FINISH_NODE_ROW:e-5}}var pt=function(t){Object(p.a)(n,t);var e=Object(f.a)(n);function n(t){var i;return Object(d.a)(this,n),(i=e.call(this,t)).state={grid:[]},i}return Object(h.a)(n,[{key:"componentDidMount",value:function(){var t=this,e=gt();this.setState({grid:e}),window.onresize=function(){if(!ut){mt();var e=ht();et=e.NUM_COLUMNS,nt=e.NUM_ROWS,it=e.FINISH_NODE_ROW,at=e.FINISH_NODE_COL;var n=gt();t.setState({grid:n})}}}},{key:"handleMouseDown",value:function(t,e){if(!ut){var n=this.state.grid;st=!0;var i=n[t][e];i.isStart?lt=!0:i.isFinish?ct=!0:(i.isWall=!i.isWall,!i.isWall||i.isStart||i.isFinish?i.isStart||i.isFinish||(document.getElementById("node-".concat(i.row,"-").concat(i.col)).className="node"):document.getElementById("node-".concat(i.row,"-").concat(i.col)).className="node node-wall")}}},{key:"handleMouseEnter",value:function(t,e){if(st&&!ut){document.getElementById("grid").onmouseleave=function(){console.log("mouse exited"),lt=!1,ct=!1,st=!1};var n=this.state.grid,i=n[t][e];if(lt){if(i.isFinish||i.isWall)return;var a=n[ot][rt];return ot=t,rt=e,document.getElementById("node-".concat(a.row,"-").concat(a.col)).className="node",a.isStart=!1,a.isWall=!1,i.isStart=!0,i.isWall=!1,void(document.getElementById("node-".concat(t,"-").concat(e)).className="node node-start")}if(ct){if(i.isStart||i.isWall)return;var o=n[it][at];return document.getElementById("node-".concat(o.row,"-").concat(o.col)).className="node",o.isFinish=!1,o.isWall=!1,i.isFinish=!0,i.isWall=!1,it=t,at=e,void(document.getElementById("node-".concat(i.row,"-").concat(i.col)).className="node node-finish")}i.isStart||i.isFinish||(i.isWall=!i.isWall,!i.isWall||i.isStart||i.isFinish?i.isStart||i.isFinish||(document.getElementById("node-".concat(i.row,"-").concat(i.col)).className="node"):document.getElementById("node-".concat(i.row,"-").concat(i.col)).className="node node-wall")}}},{key:"handleMouseUp",value:function(){ut||(lt=!1,ct=!1,st=!1,ut=!1)}},{key:"animateAlgorithm",value:function(t,e,n,i,a,o,r){for(var s=this,l=function(l){if(l===t.length)return setTimeout((function(){s.animateShortestPath(e,i,a,o,r)}),10*l),{v:void 0};setTimeout((function(){var s=t[l];n?e.length<=2?s.row===i&&s.col===a?document.getElementById("node-".concat(s.row,"-").concat(s.col)).className="node node-visited-invalid-start":s.row===o&&s.col===r?document.getElementById("node-".concat(s.row,"-").concat(s.col)).className="node node-visited-invalid-finish":document.getElementById("node-".concat(s.row,"-").concat(s.col)).className="node node-visited-invalid":document.getElementById("node-".concat(s.row,"-").concat(s.col)).className="node node-visited":e.length<=1?s.row===i&&s.col===a?document.getElementById("node-".concat(s.row,"-").concat(s.col)).className="node node-visited-invalid-start":document.getElementById("node-".concat(s.row,"-").concat(s.col)).className="node node-visited-invalid":document.getElementById("node-".concat(s.row,"-").concat(s.col)).className="node node-visited"}),10*l)},c=0;c<=t.length;c++){var u=l(c);if("object"===typeof u)return u.v}}},{key:"animateShortestPath",value:function(){var t=Object(u.a)(c.a.mark((function t(e,n,i,a,o){var r,s,l;return c.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(console.log(ut),console.log(e),!(null==e||e.length<=1)){t.next=6;break}return document.getElementById("node-".concat(a,"-").concat(o)).className="node node-visited-invalid-finish",ut=!1,t.abrupt("return");case 6:for(r=[],s=function(t){r.push(new Promise((function(a){setTimeout((function(){var o=e[t];o&&(o.isFinish?document.getElementById("node-".concat(o.row,"-").concat(o.col)).className="node node-visited-finish":o.isStart?document.getElementById("node-".concat(n,"-").concat(i)).className="node node-visited-start":document.getElementById("node-".concat(o.row,"-").concat(o.col)).className="node node-shortest-path",a())}),50*t)})))},l=0;l<e.length;l++)s(l);return t.next=11,Promise.all(r);case 11:ut=!1;case 12:case"end":return t.stop()}}),t)})));return function(e,n,i,a,o){return t.apply(this,arguments)}}()},{key:"visualizeAlgorithm",value:function(t){if(this.clearGridKeepWalls(this.state.grid),!ut){ut=!0;var e,n=this.state.grid,i=n[ot][rt],a=n[it][at],o=null;switch(t){case 0:o=v(n,i,a);break;case 1:o=k(n,i,a);break;case 2:o=W(n,i,a);break;case 3:o=function(t,e,n){H=[],T=et*nt;for(var i=0;i<=T;i++){if(!0===D(t,e,n,i))return H;H=z(H)}return H}(n,i,a);break;case 4:o=R(n,i,a);break;case 5:o=Z(n,i,a);break;case 6:o=function(t,e,n){if(S=-1,A=-1,!e||!n||e===n)return!1;var i=[],a=new U,o=new U;for(a.enqueue(e),o.enqueue(n);0!==a.length&&0!==o.length;){var r=a.dequeue(),l=o.dequeue();if("undefined"===typeof r)return i;if("undefined"===typeof l)return i;if(r.visited=!0,l.visited=!0,i.push(r),i.push(l),_(i))return i;var c,u=q(r,t),d=V(l,t),h=Object(s.a)(u);try{for(h.s();!(c=h.n()).done;){var p=c.value;p.isWall||(p.visited=!0,p.visitedByStart=!0,p.previousNode=r,a.enqueue(p))}}catch(y){h.e(y)}finally{h.f()}var f,g=Object(s.a)(d);try{for(g.s();!(f=g.n()).done;){var m=f.value;m.isWall||(m.visited=!0,m.visitedByFinish=!0,m.previousNode=l,o.enqueue(m))}}catch(y){g.e(y)}finally{g.f()}}}(n,i,a),e=this.biDirectionalHelper(n,o);break;default:o=k(n,i,a)}6!==t&&(e=O(a)),!1!==o&&(console.log(n),6===t?this.animateAlgorithm(o,e,1,ot,rt,it,it):this.animateAlgorithm(o,e,0,ot,rt,it,it))}}},{key:"biDirectionalHelper",value:function(t,e){var n=[];if("undefined"!==typeof A&&"undefined"!==typeof S&&-1!==S&&-1!==A){var i=O(t[S][A]),a=this.findSecondBranch(t,i,e);n=i.concat(a)}return n}},{key:"findSecondBranch",value:function(t,e,n){var i=t[ot][rt],a=t[it][at],o=null,r=!0;A+1>=et?r=!1:o=t[S][A+1];var s=null,l=!0;S+1>=nt?l=!1:s=t[S+1][A];var c=null,u=!0;A-1<0?u=!1:c=t[S][A-1];var d=null,h=!0;S-1<0?h=!1:d=t[S-1][A];var p=[];r&&(p=N(o,n));var f=[];l&&(f=N(s,n));var g=[];u&&(g=N(c,n));var m=[];if(h&&(m=N(d,n)),this.arrayContainsGivenNode(e,i)){if(r&&this.arrayContainsGivenNode(p,a))return p;if(l&&this.arrayContainsGivenNode(f,a))return f;if(u&&this.arrayContainsGivenNode(g,a))return g;if(h&&this.arrayContainsGivenNode(m,a))return m}else{if(this.arrayContainsGivenNode(r&&p,i))return p;if(this.arrayContainsGivenNode(l&&f,i))return f;if(u&&this.arrayContainsGivenNode(g,i))return g;if(h&&this.arrayContainsGivenNode(m,i))return m}}},{key:"arrayContainsGivenNode",value:function(t,e){if(t===[])return!1;var n,i=Object(s.a)(t);try{for(i.s();!(n=i.n()).done;){var a=n.value;if(a.row===e.row&&a.col===e.col)return!0}}catch(o){i.e(o)}finally{i.f()}return!1}},{key:"visualizeWalls",value:function(t){if(this.clearGrid(),!ut){ut=!0;var e=mt(),n=e[ot][rt],i=e[it][at],a=null;switch(t){case 0:a=function(t,e,n){if(!e||!n||e===n)return!1;var i,a=[],o=Object(s.a)(t);try{for(o.s();!(i=o.n()).done;){var r,l=i.value,c=Object(s.a)(l);try{for(c.s();!(r=c.n()).done;){var u=r.value;K(0,100)<50&&K(0,2)<1&&(u.isStart||u.isFinish||(a.push(u),u.isWall=!0))}}catch(d){c.e(d)}finally{c.f()}}}catch(d){o.e(d)}finally{o.f()}return a}(e,n,i);break;case 1:console.log(e),a=Y(e,1,nt-2,1,et-2,"HORIZONTAL","regularMaze"),console.log(e);break;case 2:a=Y(e,1,nt-2,1,et-2,"VERTICAL","verticalMaze");break;case 3:a=Y(e,1,nt-2,1,et-2,"HORIZONTAL","horizontalMaze");break;default:ut=!1}null!==a&&this.animateWalls(a,e)}}},{key:"animateWalls",value:function(){var t=Object(u.a)(c.a.mark((function t(e,n){var i,a,o,r=this;return c.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:for(i=[],a=function(t){i.push(new Promise((function(i){setTimeout((function(){var a=e[t];a&&!a.isStart&&!a.isFinish&&a.isWall&&(document.getElementById("node-".concat(a.row,"-").concat(a.col)).className="node node-wall"),t===e.length-1&&r.setState({grid:n}),i()}),10*t)})))},o=0;o<=e.length;o++)a(o);return t.next=5,Promise.all(i);case 5:ut=!1;case 6:case"end":return t.stop()}}),t)})));return function(e,n){return t.apply(this,arguments)}}()},{key:"clearGrid",value:function(){if(!ut){var t=mt();return this.setState({grid:t}),t}}},{key:"clearGridKeepWalls",value:function(t){if(!ut){var e=function(t){for(var e=[],n=0;n<nt;n++){for(var i=[],a=0;a<et;a++){var o=ft(a,n);t[n][a].isWall&&(o.isWall=!0),o.isWall?document.getElementById("node-".concat(o.row,"-").concat(o.col)).className="node node-wall":o.isFinish||o.isStart?o.isFinish?document.getElementById("node-".concat(o.row,"-").concat(o.col)).className="node node-finish":o.isStart&&(document.getElementById("node-".concat(o.row,"-").concat(o.col)).className="node node-start"):document.getElementById("node-".concat(o.row,"-").concat(o.col)).className="node",i.push(o)}e.push(i)}return e}(t);this.setState({grid:e})}}},{key:"refreshPage",value:function(){window.location.reload()}},{key:"openHelpMenu",value:function(){var t=document.getElementById("helpMenu");t.style.display="block";var e=document.getElementById("info-button"),n=document.getElementsByClassName("close")[0];console.log(t,e,n),n.onclick=function(){t.style.display="none"},window.onclick=function(e){e.target===t&&(t.style.display="none")},this.changeText(0)}},{key:"changeText",value:function(t){switch(1===t?5===dt?dt=5:dt+=t:-1===t?1===dt?dt=1:dt+=t:dt=1,dt){case 1:document.getElementById("helpMenu-content").innerHTML=this.HTMLHelper(5)+'\n        <h2 style= "margin-top: -0.3em;"> Welcome to our Pathfinding Visualizer </h2> \n        <h3 style= "margin-top: -0.7em;"> Made by Ryan L. and Eric K.</h3>\n        <p> Our pathfinding application simulates multiple pathfinding algorithms. Pathfinding algorithms \n        attempt to compute the shortest path from one point to another. Pathfinding is a fundamental component used in the world every day, from using\n         Google maps to find the shortest route, to directing autonomous robots to minimize the amount of turning, braking or specific application requirements. Our application\n         simulates a maze with walls. </p>\n        <p> Click on <strong>Next</strong> to continue the tutorial. Otherwise click anywhere outside the box, or the <strong>X</strong> button to play around with our application</p>\n        <p><img style="display: block; margin-left: auto; margin-right: auto; margin-top: -2.8em;" src="https://i.ibb.co/P9fVVW8/slide0-png.png" alt="" width="225" height="235" /></p>';break;case 2:document.getElementById("helpMenu-content").innerHTML=this.HTMLHelper(5)+'<h2 style= "margin-top: -0.3em;">Motivation</h2>\n        <p> We wanted to make this application because after taking a beginner\'s algorithms and data structures course, both of \n        us were amazed by the idea of pathfinding. We created this app to help others understand how certain algorithms \n        explore and compute the shortest path using visual animations. We also hope this application motivates others\n        to explore other algorithms we have not covered and to research more about the applications and possibilities of\n        pathfinding in the real world!</p>\n        <p><img style="display: block; margin-left: auto; margin-right: auto;" src="https://image.flaticon.com/icons/png/512/584/584641.png" alt="" width="129" height="129" /></p>';break;case 3:document.getElementById("helpMenu-content").innerHTML=this.HTMLHelper(5)+'<h2 style= "margin-top: -0.3em;"> How to Use </h2>\n        <p style = "line-height: 1.15em;"> Click and drag anywhere on the grid to draw some walls. You can also \n        drag and move the start and end nodes to your desired location. On the left side, select the algorithm\n        you want to visualize. If there is no path from the start node to the end node, the path will be <span style = "color: red;"> <strong>red</strong></span>. Otherwise, the path will be <span style = "color: yellow;"> <strong>yellow</strong></span> and the area explored by the algorithm\n        will be <span style = "color: green;"> <strong>green</strong></span>. Press <strong>Clear Board</strong> if you want to start from scratch, or <Strong>Clear Path</strong> if you want to visualize another algorithm with the same walls.\n        We also made templates of mazes at the top of our application. Finally, click on the <strong>?</strong> button to view this tutorial again.</p>\n\n        <table style="height: 108px; width: 190px; margin-left: auto; margin-right: auto;">\n        <tbody>\n        <tr style="height: 33.8px;">\n        <td style="width: 65px; height: 33.8px; text-align: center;"><img src="https://icons-for-free.com/iconfiles/png/512/double+arrow+doublechevronright+right+arrows+icon-1320185729292506033.png" alt="" width="27" height="27" /></td>\n        <td style="width: 116px; height: 33.8px; text-align: left;">= startNode</td>\n        </tr>\n        <tr style="height: 17px;">\n        <td style="width: 65px; height: 17px; text-align: center;"><img src="https://i.pinimg.com/originals/ba/3f/f2/ba3ff2209d0c43655116b31f8e2bbd65.png" alt="" width="27" height="27" /></td>\n        <td style="width: 116px; height: 17px; text-align: left;">= finishNode</td>\n        </tr>\n        </tbody>\n        </table>\n        <p>&nbsp;</p>\n        ';break;case 4:document.getElementById("helpMenu-content").innerHTML=this.HTMLHelper(5)+'<h2 style= "margin-top: -0.3em;"> Algorithm Information </h2>\n          <table>\n          <tbody>\n          <tr>\n          <td><img src="https://i.imgur.com/fnhxgNj.jpg" alt="" width="59" height="60" /></td>\n          <td>\n          <p style="text-align: left; padding-left: 10px">Click on this icon beside any pathfinding algorithm to view details about&nbsp;how to use the algorithm, the time complexity, and detailed commented code about how the algorithm works. Feel free to go to our Github repository on the next page to see more implementation details</p>\n          </td>\n          </tr>\n          </tbody>\n          </table>\n        ';break;case 5:document.getElementById("helpMenu-content").innerHTML=this.HTMLHelper(5)+'<h2 style= "margin-top: -0.3em;"> Last Words </h2>\n          <p> We hope you have fun with this application. Please feel free to contact any of us for feedback on the application. You\n          can also check out our Github source code at <a href = "https://github.com/ericrkuo/Pathfinding" target="_blank">Pathfinding Visualizer</a> </p>          \n          <table style="height: 227px; margin-left: auto; margin-right: auto; width: 552px;">\n          <tbody>\n          <tr>\n          <td style="width: 157px;"><img style="display: block; margin-left: auto; margin-right: auto;" src="https://i.ibb.co/V9qg42q/Eric-Kuo-UBC-Card.jpg" alt="" width="110" height="147" /></td>\n          <td style="width: 199px;"><img style="display: block; margin-left: auto; margin-right: auto;" src="https://image.flaticon.com/icons/png/512/87/87090.png" alt="" width="152" height="152" /></td>\n          <td style="width: 179px;"><img style="display: block; margin-left: auto; margin-right: auto;" src="https://i.ibb.co/jgZ7fF9/81928054-601968013933600-5665482190398423040-n.jpg" alt="" width="130" height="147" /></td>\n          </tr>\n          <tr>\n          <td style="width: 157px; text-align: center;"><a href="https://www.linkedin.com/in/eric-k-1198b6192/" target = "_blank">LinkedIn Eric Kuo</a></td>\n          <td style="width: 199px; text-align: center;">&nbsp;</td>\n          <td style="width: 179px; text-align: center;"><a href="https://www.linkedin.com/in/ryan-liu18/" target = "_blank">LinkedIn Ryan Liu</a></td>\n          </tr>\n          </tbody>\n          </table>\n        '}var e=document.getElementById("Prev"),n=document.getElementById("Next");1===dt?(e.style.backgroundColor="lightgrey",e.disabled=!0,n.disabled=!1,n.style.backgroundColor="hsl(214, 100%, 70%)"):5===dt?(n.disabled=!0,n.style.backgroundColor="lightgrey",e.disabled=!1,e.style.backgroundColor="hsl(214, 100%, 70%)"):(console.log("reached here"),e.disabled=!1,e.style.backgroundColor="hsl(214, 100%, 70%)",n.disabled=!1,n.style.backgroundColor="hsl(214, 100%, 70%)")}},{key:"HTMLHelper",value:function(t){return"<p> "+dt+"/"+t+"<p>\n  "}},{key:"openAlgoMenu",value:function(t){var e=document.getElementById("algo-modal");e.style.display="block",document.getElementById("algo-modal-content").scrollTop=0,document.getElementsByClassName("algo-close")[0].onclick=function(){e.style.display="none"},window.onclick=function(t){t.target===e&&(e.style.display="none")},document.getElementById("algo-modal-content").innerHTML=function(t){switch(t){case 0:return'<p style="text-align: center;"><strong>Dijkstra\'s Algorithm</strong></p>\n      <p style="text-align: left;"><span style="text-decoration: underline;">How it works</span>:</p>\n      <p style="text-align: left; padding-left: 30px;">Dijkstra\'s algorithm guarantees the shortest path. It is a greedy algorithm that explores unvisited nodes that have the smallest distance from the starting node. The distance/edge weight from one neighbouring node to another is 1. A limitation of Dijkstra\'s algorithm is that the edge weights have to have a non-negative value.&nbsp;</p>\n      <p style="text-align: left;"><span style="text-decoration: underline;">Time Complexity</span>:(n = number of nodes, m = number of edges, b = branching factor, d = maximum depth)</p>\n      <p style="text-align: left; padding-left: 30px;">Worst case: O(nlogn + mlogn) using a priority queue</p>\n      <p style="text-align: left;"><span style="text-decoration: underline;">Implementation</span>: using a priority queue</p>\n      <p style="text-align: left;"><img style="display: block; margin-left: auto; margin-right: auto;" src="https://i.imgur.com/huM31J2.png" alt="" width="740" height="1217" /></p>\n      ';case 1:return'<p style="text-align: center;"><strong>Breadth-First Search Algorithm</strong></p>\n      <p style="text-align: left;"><span style="text-decoration: underline;">How it works</span>:</p>\n      <p style="text-align: left; padding-left: 30px;">The Breadth-First Search algorithm guarantees the shortest path. It explores all nodes by layers, or in other words, exploring all the neighbouring nodes at a certain level before moving to the next-level neighbour nodes.&nbsp;</p>\n      <p style="text-align: left;"><span style="text-decoration: underline;">Time Complexity</span>: (n = number of nodes, m = number of edges, b = branching factor, d = maximum depth)</p>\n      <p style="text-align: left; padding-left: 30px;">Worst case: O(m+n) or O(b<sup>d</sup>)</p>\n      <p style="text-align: left;"><span style="text-decoration: underline;">Implementation</span>:&nbsp;<br /><img style="display: block; margin-left: auto; margin-right: auto;" src="https://i.imgur.com/85NSd1y.png" alt="" width="767" height="1096" /></p>\n      ';case 2:return'<p style="text-align: center;"><strong>Depth-First Search Algorithm</strong></p>\n      <p style="text-align: left;"><span style="text-decoration: underline;">How it works</span>:</p>\n      <p style="text-align: left; padding-left: 30px;">The Depth-First Search algorithm does not guarantee the shortest path. Depth-First search traverses a maze as deep as far as possible and then comes back to a node to repeat the whole process of going as deep as possible again.&nbsp;</p>\n      <p style="text-align: left;"><span style="text-decoration: underline;">Time Complexity</span>: (n = number of nodes, m = number of edges, b = branching factor, d = maximum depth)</p>\n      <p style="text-align: left; padding-left: 30px;">Worst case: O(m+n) or O(b<sup>d</sup>)</p>\n      <p style="text-align: left;"><span style="text-decoration: underline;">Implementation</span>:&nbsp;</p>\n      <p style="text-align: left;"><br /><img style="display: block; margin-left: auto; margin-right: auto;" src="https://i.imgur.com/9XT7dsJ.png" alt="" width="800" height="1280" /></p>\n      ';case 3:return'<p style="text-align: center;"><strong>Iterative Deepening Depth-First Search Algorithm (IDDFS)</strong></p>\n      <p style="text-align: left;"><span style="text-decoration: underline;">How it works</span>:</p>\n      <p style="text-align: left; padding-left: 30px;">The IDDFS algorithm does not guarantee the shortest path. IDDFS is a depth limited version of depth-first search that is run-repeatedly with increasing depth limits until the goal is found.&nbsp;</p>\n      <p style="text-align: left;"><span style="text-decoration: underline;">Time Complexity</span>: (n = number of nodes, m = number of edges, b = branching factor, d = maximum depth)</p>\n      <p style="text-align: left; padding-left: 30px;">Worst case: O(m+n) or O(b<sup>d</sup>)</p>\n      <p style="text-align: left;"><span style="text-decoration: underline;">Implementation</span>:&nbsp;</p>\n      <p style="text-align: left;"><br /><img style="display: block; margin-left: auto; margin-right: auto;" src="https://i.imgur.com/3jZpVex.png" alt="" width="748" height="1680" /></p>';case 4:return'<p style="text-align: center;"><strong>A* Algorithm</strong></p>\n      <p style="text-align: left;"><span style="text-decoration: underline;">How it works</span>:</p>\n      <p line-height = "1.2em" style="text-align: left; padding-left: 30px;">The A* algorithm guarantees the shortest path. The algorithm is similar to Dijkstra\'s algorithm and Breadth-First Search, but A* differs by using heuristics to essentially plan ahead at each step so a more optimal decision is made. The algorithm uses a function f(n) = g(n) + h(n), where f(n) is the total estimated cost of the path through node n, which we will be using to compare and order nodes in the priority queue. g(n) is the exact cost from the start node to n. h(n) is the heuristic part, it is the estimated cost from n to the finish node. Calculating h(n) can be done using Manhattan, Euclidean, or Diagonal distance. We will be using the Manhattan distance. One neat fact about A* is that if h(n) = 0, A* becomes Dijkstra\'s algorithms.&nbsp;&nbsp;</p>\n      <p style="text-align: left;"><span style="text-decoration: underline;">Time Complexity</span>: (n = number of nodes, m = number of edges, b = branching factor, d = maximum depth)</p>\n      <p style="text-align: left; padding-left: 30px;">The runtime of A* depends on your heuristic function h(n). The more expensive/inefficient h(n) is, the slower A* runs.&nbsp;</p>\n      <p style="text-align: left;"><span style="text-decoration: underline;">Implementation</span>:&nbsp;</p>\n      <p style="text-align: left;"><img style="display: block; margin-left: auto; margin-right: auto;" src="https://i.imgur.com/p3LvPbF.png" alt="" width="750" height="1670" /><br /><br /></p>\n      ';case 5:return'<p style="text-align: center;"><strong>Greedy Best-First Search Algorithm</strong></p>\n      <p style="text-align: left;"><span style="text-decoration: underline;">How it works</span>:</p>\n      <p style="text-align: left; padding-left: 30px;">Greedy Best-First Search Algorithm does not guarantee the shortest path. It is similar to A*, but the only difference is that f(n) = h(n), so the algorithm evaluates nodes by using only the heuristic function as a guide towards the finish node.&nbsp;</p>\n      <p style="text-align: left;"><span style="text-decoration: underline;">Time Complexity</span>: (n = number of nodes, m = number of edges, b = branching factor, d = maximum depth)</p>\n      <p style="text-align: left; padding-left: 30px;">Worst case: O(b<sup>d</sup>)&nbsp;</p>\n      <p style="text-align: left;"><span style="text-decoration: underline;">Implementation</span>:&nbsp;</p>\n      <p style="text-align: left;"><img style="display: block; margin-left: auto; margin-right: auto;" src="https://i.imgur.com/0WsX4MR.png" alt="" width="764" height="1624" /><br /><br /></p>\n      ';case 6:return'<p style="text-align: center;"><strong>Bidirectional Breadth-First Search Algorithm</strong></p>\n      <p style="text-align: left;"><span style="text-decoration: underline;">How it works</span>:</p>\n      <p style="text-align: left; padding-left: 30px;">Bidirectional Breadth-First Search Algorithm guarantees the shortest path. It performs Breadth-First Search on both the start and finish nodes and terminates when the two searches intersect with one another.&nbsp;</p>\n      <p style="text-align: left;"><span style="text-decoration: underline;">Time Complexity</span>: (n = number of nodes, m = number of edges, b = branching factor, d = maximum depth)</p>\n      <p style="text-align: left; padding-left: 30px;">Worst case: O(b<sup>d/2</sup>)&nbsp;</p>\n      <p style="text-align: left;"><span style="text-decoration: underline;">Implementation</span>:&nbsp;</p>\n      <p style="text-align: left;"><img style="display: block; margin-left: auto; margin-right: auto;" src="https://i.imgur.com/yPXxd30.png" width="763" height="1378" /><br /><br /></p>';default:return"<p>Sorry, an unexpected error occured, please refresh</p>"}}(t)}},{key:"render",value:function(){var t=this,e=this.state.grid;return Object(g.jsxs)(g.Fragment,{children:[Object(g.jsxs)("div",{className:"title-container",children:[Object(g.jsx)("div",{className:"title",onClick:function(){return t.refreshPage()},children:"Pathfinding Visualizer"}),Object(g.jsxs)("div",{className:"title-button-row",children:[Object(g.jsxs)("button",{className:"title-button",onClick:function(){return t.visualizeWalls(1)},children:[" ","Recursive Division"," "]}),Object(g.jsxs)("button",{className:"title-button",onClick:function(){return t.visualizeWalls(0)},children:[" ","Scatter"," "]}),Object(g.jsxs)("button",{className:"title-button",onClick:function(){return t.visualizeWalls(2)},children:[" ","Vertical Maze"," "]}),Object(g.jsxs)("button",{className:"title-button",onClick:function(){return t.visualizeWalls(3)},children:[" ","Horizontal Maze"," "]}),Object(g.jsxs)("button",{className:"info-button",id:"info-button",onClick:function(){return t.openHelpMenu()},children:[" ","?"," "]})]})]}),Object(g.jsxs)("div",{className:"modal",id:"helpMenu",children:[Object(g.jsxs)("div",{className:"modal-container",children:[Object(g.jsx)("span",{className:"close",id:"close",children:"\xd7"}),Object(g.jsx)("div",{className:"buttons-container",children:Object(g.jsxs)("div",{className:"info-buttons",children:[Object(g.jsxs)("button",{id:"Prev",onClick:function(){return t.changeText(-1)},children:[" ","Prev"," "]}),Object(g.jsxs)("button",{id:"Next",onClick:function(){return t.changeText(1)},children:[" ","Next"," "]})]})})]}),Object(g.jsx)("div",{className:"modal-content",id:"helpMenu-content"})]}),Object(g.jsxs)("div",{className:"algo-modal",id:"algo-modal",children:[Object(g.jsx)("span",{className:"algo-close",id:"algo-close",children:"\xd7"}),Object(g.jsx)("div",{className:"algo-modal-content",id:"algo-modal-content"})]}),Object(g.jsxs)("div",{className:"container",children:[Object(g.jsxs)("div",{children:[Object(g.jsxs)("div",{className:"container-button-group",children:[Object(g.jsx)("button",{className:"algo-btn-group",onClick:function(){return t.openAlgoMenu(0)},children:"\u24d8"}),Object(g.jsx)("button",{className:"btn-group",onClick:function(){return t.visualizeAlgorithm(0)},children:"Dijkstra's Algorithm"})]}),Object(g.jsxs)("div",{className:"container-button-group",children:[Object(g.jsx)("button",{className:"algo-btn-group",onClick:function(){return t.openAlgoMenu(1)},children:"\u24d8"}),Object(g.jsx)("button",{className:"btn-group",onClick:function(){return t.visualizeAlgorithm(1)},children:"Breadth First Search"})]}),Object(g.jsxs)("div",{className:"container-button-group",children:[Object(g.jsx)("button",{className:"algo-btn-group",onClick:function(){return t.openAlgoMenu(2)},children:"\u24d8"}),Object(g.jsx)("button",{className:"btn-group",onClick:function(){return t.visualizeAlgorithm(2)},children:"Depth First Search"})]}),Object(g.jsxs)("div",{className:"container-button-group",children:[Object(g.jsx)("button",{className:"algo-btn-group",onClick:function(){return t.openAlgoMenu(3)},children:"\u24d8"}),Object(g.jsx)("button",{className:"btn-group",onClick:function(){return t.visualizeAlgorithm(3)},children:"Iterative Deepening DFS"})]}),Object(g.jsxs)("div",{className:"container-button-group",children:[Object(g.jsx)("button",{className:"algo-btn-group",onClick:function(){return t.openAlgoMenu(4)},children:"\u24d8"}),Object(g.jsx)("button",{className:"btn-group",onClick:function(){return t.visualizeAlgorithm(4)},children:"A*"})]}),Object(g.jsxs)("div",{className:"container-button-group",children:[Object(g.jsx)("button",{className:"algo-btn-group",onClick:function(){return t.openAlgoMenu(5)},children:"\u24d8"}),Object(g.jsx)("button",{className:"btn-group",onClick:function(){return t.visualizeAlgorithm(5)},children:"Greedy Best First Search"})]}),Object(g.jsxs)("div",{className:"container-button-group",children:[Object(g.jsx)("button",{className:"algo-btn-group",onClick:function(){return t.openAlgoMenu(6)},children:"\u24d8"}),Object(g.jsx)("button",{className:"btn-group",onClick:function(){return t.visualizeAlgorithm(6)},children:"BiDirectional BFS"})]}),Object(g.jsx)("div",{className:"container-button-group",children:Object(g.jsx)("button",{className:"btn-group",onClick:function(){return t.clearGridKeepWalls(e)},children:"Clear Path"})}),Object(g.jsx)("div",{className:"container-button-group",children:Object(g.jsx)("button",{id:"clearGrid",className:"btn-group",onClick:function(){return t.clearGrid()},children:"Clear Board"})})]}),Object(g.jsx)("div",{className:"grid",id:"grid",children:e.map((function(e,n){return Object(g.jsx)("div",{children:e.map((function(e,n){var i=e.col,a=e.row,o=e.isStart,r=e.isFinish,s=e.isWall;return Object(g.jsx)(m,{col:i,isFinish:r,isStart:o,isWall:s,mouseIsPressed:st,onMouseDown:function(e,n){return t.handleMouseDown(e,n)},onMouseEnter:function(e,n){return t.handleMouseEnter(e,n)},onMouseUp:function(){return t.handleMouseUp()},row:a},n)}))},n)}))})]})]})}}]),n}(a.Component);function ft(t,e){return{col:t,row:e,isStart:e===ot&&t===rt,isFinish:e===it&&t===at,distance:1/0,visited:!1,isWall:!1,previousNode:null}}function gt(){for(var t=[],e=0;e<nt;e++){for(var n=[],i=0;i<et;i++)n.push(ft(i,e));t.push(n)}return t}function mt(){for(var t=[],e=0;e<nt;e++){for(var n=[],i=0;i<et;i++){var a=ft(i,e);a.isWall=!1,!a||a.isFinish||a.isStart?a.isFinish?document.getElementById("node-".concat(a.row,"-").concat(a.col)).className="node node-finish":a.isStart&&(document.getElementById("node-".concat(a.row,"-").concat(a.col)).className="node node-start"):document.getElementById("node-".concat(a.row,"-").concat(a.col)).className="node",n.push(a)}t.push(n)}return t}var yt=function(){return document.title="Pathfinding",Object(g.jsx)("div",{className:"App",id:"App",children:Object(g.jsx)(pt,{})})};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(Object(g.jsx)(yt,{}),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(t){t.unregister()}))}],[[26,1,2]]]);
//# sourceMappingURL=main.6b52a33f.chunk.js.map